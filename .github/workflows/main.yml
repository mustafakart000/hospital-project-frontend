name: Deploy Frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    # Bağımlılıkları Temizle ve Yeniden Yükle
    - name: Clean Install
      run: |
        rm -rf node_modules package-lock.json
        npm cache clean --force
        npm install
        
    # ESLint'i Devre Dışı Bırak
    - name: Create Vite Config
      run: |
        cat > vite.config.js << 'END'
        import { defineConfig } from 'vite'
        import react from '@vitejs/plugin-react'

        export default defineConfig({
          plugins: [react()],
          build: {
            outDir: 'dist',
            emptyOutDir: true
          }
        })
        END
        
    # Build İşlemi
    - name: Build Frontend
      run: |
        VITE_DISABLE_ESLINT=true npm run build
        
    # Build Sonrası Kontrol
    - name: Check Build Output
      run: |
        ls -la
        ls -la dist || echo "dist directory not found"
        
    # Expect Yükleme    
    - name: Install Expect
      run: |
        sudo apt-get update
        sudo apt-get install -y expect
        
    # Dosyaları Transfer Et    
    - name: Transfer Frontend Files
      run: |
        pwd
        ls -la dist/  # Debug için içeriği görelim
        cd dist && expect <<'EOF'
        spawn scp -r * root@37.148.209.189:/var/www/html/
        expect {
          "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
          "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
        }
        expect eof
        EOF
        
    # Nginx Restart    
    - name: Restart Nginx
      run: |
        expect <<'EOF'
        spawn ssh root@37.148.209.189
        expect {
          "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
          "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
        }
        expect "~#"
        send "systemctl restart nginx\r"
        expect "~#"
        send "exit\r"
        expect eof
        EOF
